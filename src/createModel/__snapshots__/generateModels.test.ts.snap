// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`generates the right types 1`] = `
"const schema = {\\"name\\":\\"Test Schema 1\\",\\"models\\":[{\\"id\\":\\"user\\",\\"names\\":{\\"singularCamel\\":\\"User\\",\\"pluralCamel\\":\\"User\\",\\"pluralPascal\\":\\"User\\",\\"singularPascal\\":\\"User\\"},\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\"},\\"bio\\":{\\"type\\":\\"string\\"},\\"created\\":{\\"type\\":\\"date\\"}}},{\\"id\\":\\"org\\",\\"names\\":{\\"singularCamel\\":\\"Organization\\",\\"pluralCamel\\":\\"Organization\\",\\"pluralPascal\\":\\"Organization\\",\\"singularPascal\\":\\"Organization\\"},\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\"},\\"description\\":{\\"type\\":\\"string\\"},\\"users\\":{\\"type\\":\\"many-to-many\\",\\"modelId\\":\\"user\\",\\"manyToManyOptions\\":{\\"joinTable\\":{\\"name\\":\\"user_orgs\\"}}}}},{\\"id\\":\\"settings\\",\\"names\\":{\\"singularCamel\\":\\"Settings\\",\\"pluralCamel\\":\\"Settings\\",\\"pluralPascal\\":\\"Settings\\",\\"singularPascal\\":\\"Settings\\"},\\"properties\\":{\\"id\\":{\\"type\\":\\"string\\"},\\"user\\":{\\"type\\":\\"one-to-one\\",\\"modelId\\":\\"user\\",\\"oneToOneOptions\\":{\\"key\\":\\"user_id\\"}}}}]};

interface User {  id: string;  bio: string;  created: date;}

interface RawUser {  id: string;  bio: string;  created: date;}

interface Organization {  id: string;  description: string;}

interface RawOrganization {  id: string;  description: string;}

interface Settings {  id: string;}

interface RawSettings {  id: string;  user_id: string;}

"
`;
